// =============================================================================
// VARIABLES PARA TABLA DE ÓRDENES
// =============================================================================
$primary-color: #EA6300;
$secondary-color: #13123D;
$border-color: #ff7101;
$success-color: #10b981;
$warning-color: #f59e0b;

// Breakpoints
$breakpoints: (
  xs: 320px,
  xs-max: 470px,
  sm: 471px,
  sm-max: 575px,
  md: 576px,
  md-max: 767px,
  lg: 768px,
  lg-max: 991px,
  xl: 992px,
  xl-max: 1199px,
  xxl: 1200px,
  xxl-max: 1399px,
  xxxl: 1400px
);

// =============================================================================
// MIXINS ESPECIALIZADOS PARA ÓRDENES
// =============================================================================

@mixin respond-to($breakpoint-min, $breakpoint-max: null) {
  @if $breakpoint-max {
    @media only screen and (min-width: $breakpoint-min) and (max-width: $breakpoint-max) {
      @content;
    }
  } @else {
    @media only screen and (min-width: $breakpoint-min) {
      @content;
    }
  }
}

// Tipografía compacta para órdenes con mejor legibilidad en pantallas grandes
@mixin orders-typography($base-size, $scale-factor: 0.9) {
  font-size: $base-size;
  line-height: 1.4;
  font-weight: 500;
  
  @include respond-to(map-get($breakpoints, xs), map-get($breakpoints, xs-max)) {
    font-size: $base-size * $scale-factor * 0.7;
  }
  
  @include respond-to(map-get($breakpoints, sm), map-get($breakpoints, sm-max)) {
    font-size: $base-size * $scale-factor * 0.8;
  }
  
  @include respond-to(map-get($breakpoints, md), map-get($breakpoints, md-max)) {
    font-size: $base-size * $scale-factor * 0.85;
  }
  
  @include respond-to(map-get($breakpoints, lg), map-get($breakpoints, xl-max)) {
    font-size: $base-size * $scale-factor * 1.05;
  }
  
  @include respond-to(map-get($breakpoints, xxl)) {
    font-size: $base-size * $scale-factor * 1.15;
  }
}

// Padding optimizado para celdas de órdenes
@mixin orders-cell-padding($base-vertical: 0.75rem, $base-horizontal: 1rem) {
  padding: $base-vertical $base-horizontal;
  
  @include respond-to(map-get($breakpoints, xs), map-get($breakpoints, xs-max)) {
    padding: $base-vertical * 0.5 $base-horizontal * 0.4;
  }
  
  @include respond-to(map-get($breakpoints, sm), map-get($breakpoints, sm-max)) {
    padding: $base-vertical * 0.6 $base-horizontal * 0.5;
  }
  
  @include respond-to(map-get($breakpoints, md), map-get($breakpoints, md-max)) {
    padding: $base-vertical * 0.7 $base-horizontal * 0.6;
  }
  
  @include respond-to(map-get($breakpoints, lg), map-get($breakpoints, xl-max)) {
    padding: $base-vertical * 0.8 $base-horizontal * 0.75;
  }
  
  @include respond-to(map-get($breakpoints, xxl)) {
    padding: $base-vertical $base-horizontal;
  }
}

// Botones específicos para acciones de órdenes (Confirmar, Rechazar, Detalle)
@mixin orders-action-button($base-height: 1.75rem, $base-padding: 0.3rem 0.7rem) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background-color: white;
  border: 2px solid $border-color;
  border-radius: 0.25rem;
  font-weight: 600;
  transition: all 0.2s ease;
  color: #6c757d;
  white-space: nowrap;
  cursor: pointer;
  
  height: $base-height;
  padding: $base-padding;
  gap: 0.25rem;
  @include orders-typography(0.7rem);
  
  // Móvil extra pequeño (320px-470px)
  @include respond-to(map-get($breakpoints, xs), map-get($breakpoints, xs-max)) {
    height: 1.3rem;
    padding: 0.15rem 0.3rem;
    font-size: 0.55rem;
    font-weight: 500;
    border-radius: 0.2rem;
    border-width: 1.5px;
    gap: 0.1rem;
    min-width: 1.8rem;
    
    span {
      display: none;
    }
  }

  // Móvil pequeño (471px-575px)
  @include respond-to(map-get($breakpoints, sm), map-get($breakpoints, sm-max)) {
    height: 1.5rem;
    padding: 0.2rem 0.45rem;
    font-size: 0.62rem;
    border-radius: 0.22rem;
    border-width: 1.5px;
    gap: 0.18rem;
    min-width: 2.2rem;

    span {
      display: inline;
    }
  }
  
  // Tablet (576px-767px)
  @include respond-to(map-get($breakpoints, md), map-get($breakpoints, md-max)) {
    height: 1.6rem;
    padding: 0.25rem 0.5rem;
    font-size: 0.65rem;
    border-radius: 0.25rem;
    border-width: 2px;
    gap: 0.2rem;
    min-width: 2.5rem;
  }
  
  // Desktop pequeño (768px-1199px)
  @include respond-to(map-get($breakpoints, lg), map-get($breakpoints, xl-max)) {
    height: 1.75rem;
    padding: 0.3rem 0.6rem;
    font-size: 0.7rem;
    gap: 0.25rem;
    min-width: 3rem;
  }
  
  // Desktop grande (1200px+)
  @include respond-to(map-get($breakpoints, xxl)) {
    height: 2rem;
    padding: 0.4rem 0.8rem;
    font-size: 0.75rem;
    font-weight: 650;
    border-radius: 0.3rem;
    gap: 0.3rem;
    min-width: 3.5rem;
  }
}

// =============================================================================
// ESTILOS ESPECÍFICOS PARA TABLA DE ÓRDENES
// =============================================================================
.orders-table-container {
  width: 100%;
  overflow: hidden;

  .orders-table-header {
    padding: 1rem 1.5rem;
    background-color: $secondary-color;
    
    @include respond-to(map-get($breakpoints, xs), map-get($breakpoints, sm-max)) {
      padding: 0.75rem 1rem;
    }
    
    @include respond-to(map-get($breakpoints, md), map-get($breakpoints, lg-max)) {
      padding: 1rem 1.25rem;
    }
    
    @include respond-to(map-get($breakpoints, xxl)) {
      padding: 1.25rem 2rem;
    }
  }

  .orders-table-title {
    color: white;
    font-weight: bold;
    margin: 0;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    @include orders-typography(1.3rem);
  }

  .orders-element-counter {
    color: white;
    font-weight: 500;
    @include orders-typography(0.8rem);
  }

  .orders-search-container {
    position: relative;
    width: 100%;
    margin-top: 1rem;
  }

  .orders-search-icon-container {
    position: absolute;
    top: 50%;
    left: 0.75rem;
    transform: translateY(-50%);
    display: flex;
    align-items: center;
    pointer-events: none;
    z-index: 10;
  }

  .orders-search-icon {
    color: #6b7280;
    width: 1rem;
    height: 1rem;
    
    @include respond-to(map-get($breakpoints, md)) {
      width: 1.125rem;
      height: 1.125rem;
    }
  }

  .orders-search-input {
    width: 100%;
    padding: 0.55rem 0.75rem 0.55rem 2.5rem;
    border: 1px solid #d1d5db;
    border-radius: 0.375rem;
    background-color: white;
    @include orders-typography(0.85rem);
    transition: all 0.2s ease;

    &::placeholder {
      color: #6b7280;
      font-size: inherit;
    }

    &:focus {
      outline: none;
      box-shadow: 0 0 0 2px #3b82f6;
      border-color: transparent;
    }
  }

  .orders-table-wrapper {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }

  .orders-table {
    width: 100%;
    table-layout: fixed;
    border-collapse: collapse;
    
    // Tablet hasta desktop mediano (768px-1399px) - MÁS ESPACIO PARA ACCIONES
    @include respond-to(map-get($breakpoints, lg), map-get($breakpoints, xxl-max)) {
      th:nth-child(1), td:nth-child(1) { width: 13%; }  // ID Orden
      th:nth-child(2), td:nth-child(2) { width: 15%; }  // Estado
      th:nth-child(3), td:nth-child(3) { width: 15%; }  // Maquinaria
      th:nth-child(4), td:nth-child(4) { width: 13%; }  // Fecha inicio
      th:nth-child(5), td:nth-child(5) { width: 13%; }  // Fecha fin
      th:nth-child(6), td:nth-child(6) { width: 31%; }  // Botones - MÁS ANCHO
    }
    
    // Desktop grande (1400px+)
    @include respond-to(map-get($breakpoints, xxxl)) {
      th:nth-child(1), td:nth-child(1) { width: 14%; }
      th:nth-child(2), td:nth-child(2) { width: 16%; }
      th:nth-child(3), td:nth-child(3) { width: 19%; }
      th:nth-child(4), td:nth-child(4) { width: 14%; }
      th:nth-child(5), td:nth-child(5) { width: 14%; }
      th:nth-child(6), td:nth-child(6) { width: 23%; }
    }
  }

  .orders-table-head {
    background-color: $secondary-color;
  }

  .orders-table-header-cell {
    text-align: left;
    font-weight: bold;
    color: white;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    @include orders-cell-padding(0.5rem, 1rem);
    @include orders-typography(0.75rem);
    
    &.orders-status-header,
    &.orders-actions-header {
      text-align: center;
    }
  }

  .orders-table-body {
    background-color: white;
  }

  .orders-table-row {
    border-bottom: 1px solid #f3f4f6;
    transition: background-color 0.15s ease;
    
    &:hover {
      background-color: #f9fafb;
    }
  }

  .orders-table-cell {
    @include orders-cell-padding(0.65rem, 1rem);
    @include orders-typography(0.9rem);
    word-wrap: break-word;
    overflow-wrap: break-word;
    
    &.orders-status-cell {
      text-align: center;
    }
    
    &.orders-actions-cell {
      text-align: center;
      padding: 0.4rem 0.5rem;
    }
  }

  .orders-select {
    @include orders-typography(0.65rem);
    font-weight: 600;
    padding: 0.2rem 1.2rem 0.2rem 0.4rem;
    border-radius: 0.25rem;
    border: 1px solid #d1d5db;
    background-color: white;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%23EA6300' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.25rem center;
    background-repeat: no-repeat;
    background-size: 0.75em 0.75em;
    appearance: none;
    cursor: pointer;
    min-width: 4rem;
    max-width: 6rem;
    
    @include respond-to(map-get($breakpoints, lg)) {
      min-width: 5rem;
      max-width: 7rem;
    }
  }

  .orders-actions-container {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.2rem;
    flex-wrap: nowrap;
    
    @include respond-to(map-get($breakpoints, xs), map-get($breakpoints, sm-max)) {
      flex-direction: column;
      gap: 0.15rem;
    }
    
    @include respond-to(map-get($breakpoints, md)) {
      flex-direction: row;
      gap: 0.25rem;
    }
    
    @include respond-to(map-get($breakpoints, lg)) {
      gap: 0.3rem;
    }
    
    @include respond-to(map-get($breakpoints, xxl)) {
      gap: 0.4rem;
    }
  }

  .orders-action-button {
    @include orders-action-button();
    
    svg {
      color: $primary-color;
      transition: transform 0.2s ease;
      flex-shrink: 0;
      width: 0.7rem;
      height: 0.7rem;
      
      @include respond-to(map-get($breakpoints, xs), map-get($breakpoints, xs-max)) {
        width: 0.5rem;
        height: 0.5rem;
      }
      
      @include respond-to(map-get($breakpoints, sm), map-get($breakpoints, sm-max)) {
        width: 0.6rem;
        height: 0.6rem;
      }
      
      @include respond-to(map-get($breakpoints, lg)) {
        width: 0.75rem;
        height: 0.75rem;
      }
      
      @include respond-to(map-get($breakpoints, xxl)) {
        width: 0.85rem;
        height: 0.85rem;
      }
    }
    
    &:hover {
      svg {
        transform: translateY(-2px);
      }
    }
    
    &:active {
      svg {
        transform: translateY(0);
      }
    }
    
    &.table-action-button--icon-only {
      .orders-button-text:not(.sr-only) {
        display: none !important;
      }
      
      min-width: auto;
      padding: 0.25rem;
      
      @include respond-to(map-get($breakpoints, xs), map-get($breakpoints, xs-max)) {
        padding: 0.15rem;
      }
    }
  }

  .orders-button-text {
    font-size: inherit;
    font-weight: inherit;
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  .relative {
    position: relative;
  }
}

// =============================================================================
// FIX PARA AGREGAR ESPACIOS LATERALES COMO DYNAMICTABLE
// =============================================================================
.orders-table-container {
  > div:first-child {
    padding-left: 2rem !important;
    padding-right: 2rem !important;
    
    @include respond-to(map-get($breakpoints, xs), map-get($breakpoints, xs-max)) {
      padding-left: 1rem !important;
      padding-right: 1rem !important;
    }
    
    @include respond-to(map-get($breakpoints, sm), map-get($breakpoints, sm-max)) {
      padding-left: 1.5rem !important;
      padding-right: 1.5rem !important;
    }
  }

  .orders-table-header-cell {
    padding-left: 2rem !important;
    padding-right: 2rem !important;
    
    @include respond-to(map-get($breakpoints, xs), map-get($breakpoints, xs-max)) {
      padding-left: 1rem !important;
      padding-right: 0.5rem !important;
    }
    
    @include respond-to(map-get($breakpoints, sm), map-get($breakpoints, sm-max)) {
      padding-left: 1.5rem !important;
      padding-right: 1rem !important;
    }
    
    &:first-child {
      padding-left: 2rem !important;
      
      @include respond-to(map-get($breakpoints, xs), map-get($breakpoints, xs-max)) {
        padding-left: 1rem !important;
      }
    }
  }

  .orders-table-cell {
    padding-left: 2rem !important;
    padding-right: 2rem !important;
    
    @include respond-to(map-get($breakpoints, xs), map-get($breakpoints, xs-max)) {
      padding-left: 1rem !important;
      padding-right: 0.5rem !important;
    }
    
    @include respond-to(map-get($breakpoints, sm), map-get($breakpoints, sm-max)) {
      padding-left: 1.5rem !important;
      padding-right: 1rem !important;
    }
    
    &:first-child {
      padding-left: 2rem !important;
      
      @include respond-to(map-get($breakpoints, xs), map-get($breakpoints, xs-max)) {
        padding-left: 1rem !important;
      }
    }
  }
}

// =============================================================================
// OVERRIDE ESPECÍFICO PARA BOTONES CONFIRMAR Y RECHAZAR
// =============================================================================
.orders-action-button {
  &[title*="Confirmar"],
  &[title*="Rechazar"] {
    // Rango medio (768px-1399px) - Hacer botones MÁS COMPACTOS
    @include respond-to(map-get($breakpoints, lg), map-get($breakpoints, xxl-max)) {
      padding-left: 0.35rem !important;
      padding-right: 0.35rem !important;
      gap: 0.15rem !important;
      font-size: 0.65rem !important;
      height: 1.65rem !important;
      min-width: auto !important;
      
      // Reducir tamaño de ícono también
      svg {
        width: 0.65rem !important;
        height: 0.65rem !important;
      }
    }
    
    // Solo para desktop grande (1400px en adelante)
    @include respond-to(map-get($breakpoints, xxxl)) {
      padding-left: 0.7rem !important;
      padding-right: 0.7rem !important;
      gap: 0.22rem !important;
      min-width: auto !important;  
    }
  }
}
